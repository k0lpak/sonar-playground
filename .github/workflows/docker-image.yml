name: CI

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'dev'
      - 'release/**'
      - 'rc/**'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'dev'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/dev-actions/dotnet-sonar-scan
        name: Run SonarQube Scan
        with:
          organization: k0lpak
          project-key: k0lpak_sonar-playground
          project-name: sonar-playground
          sonar-token: ${{ secrets.SONAR_TOKEN }}
      # - name: Initialization
      #   run: |
      #     dotnet tool install --global dotnet-sonarscanner --version 5.7.1
      #     apt-get update && apt-get dist-upgrade -y && apt-get install -y openjdk-11-jre
      #     PATH="${PATH}:/root/.dotnet/tools"
      # - name: Begin SonarQube
      #   run: |
      #     dotnet sonarscanner begin /o:"k0lpak" /k:"k0lpak_sonar-playground" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      # - name: Build
      #   run: |
      #     dotnet build SonarPlaygroundGBActions.sln
      # - name: End SonarQube
      #   run: |
      #     dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: .sonarqube/out/.sonar/report-task.txt
#jobs:
#
#  build:
#    name: Build, Test & Push
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3.0.2
#        with:
#          fetch-depth: 0
#      - name: Build
#        run: |
#          DOCKER_BUILDKIT=1 docker build -t sonardemo --build-arg DOCKER_TAG=sonardemo --build-arg SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} --build-arg BRANCH_NAME=${{ github.ref_name }} -f ./SonarPlaygroundGBActions/Dockerfile --progress=plain .
#        shell: bash
